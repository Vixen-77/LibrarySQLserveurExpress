// <auto-generated />
using System;
using LibrarySSMS;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Library_SSMS.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LibrarySSMS.Models.Admin", b =>
                {
                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool?>("AccessToDB")
                        .HasColumnType("bit");

                    b.Property<bool?>("DBmanipulation")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UIDKEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nbDeletedacount")
                        .HasColumnType("int");

                    b.Property<int?>("nbSuspendedacount")
                        .HasColumnType("int");

                    b.HasKey("UID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("LibrarySSMS.Models.AdminH", b =>
                {
                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AccountStatus")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool?>("DBmanipulation")
                        .HasColumnType("bit");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsSuspended")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("UIDKEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("AdminHs");
                });

            modelBuilder.Entity("LibrarySSMS.Models.CGM", b =>
                {
                    b.Property<Guid>("IdCGM")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ADRMAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Glycemia")
                        .HasColumnType("real");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float>("battry")
                        .HasColumnType("real");

                    b.Property<Guid>("idporteur")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isGlyLow")
                        .HasColumnType("bit");

                    b.Property<bool>("isGlyhigh")
                        .HasColumnType("bit");

                    b.HasKey("IdCGM");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("CGMs");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Centre", b =>
                {
                    b.Property<Guid>("IdC")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AdminHUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AdresseCentre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<int>("Nbamb")
                        .HasColumnType("int");

                    b.Property<string>("NomC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.HasKey("IdC");

                    b.HasIndex("AdminHUID");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("Centress");
                });

            modelBuilder.Entity("LibrarySSMS.Models.MedRec", b =>
                {
                    b.Property<Guid>("UIDMedRec")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MailMed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("UIDMedRec");

                    b.HasIndex("AdminUID");

                    b.HasIndex("PatientUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("MedRecs");
                });

            modelBuilder.Entity("LibrarySSMS.Models.NotificationAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("PatientUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Notificationadmins");
                });

            modelBuilder.Entity("LibrarySSMS.Models.NotificationAdminAlert", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("patientUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("NotificationAdminAlerts");
                });

            modelBuilder.Entity("LibrarySSMS.Models.NotificationServiceClient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("patientUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("proSUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("NotificationServiceClients");
                });

            modelBuilder.Entity("LibrarySSMS.Models.NotificationSuperAdmin", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsRead")
                        .HasColumnType("bit");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("report")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NotificationSuperAdmins");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Patient", b =>
                {
                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AccountStatus")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adresse")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<double>("Height")
                        .HasColumnType("float");

                    b.Property<Guid?>("IdCGMP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSmartwatchNewGenP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSmartwatchP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVehiculeOBUP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdphoneP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NbSec")
                        .HasColumnType("int");

                    b.Property<int?>("NbSecWeek")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("State")
                        .HasColumnType("int");

                    b.Property<bool?>("SubscriptionPlan")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<string>("identite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("Patientss");
                });

            modelBuilder.Entity("LibrarySSMS.Models.ProS", b =>
                {
                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("AcceptRequest")
                        .HasColumnType("bit");

                    b.Property<bool>("AccountStatus")
                        .HasColumnType("bit");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Certif")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CheckedSchedule")
                        .HasColumnType("bit");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateAcceptRequest")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateofBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Gender")
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdSmartphoneProS")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdVehiculeOBUSVP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("IsAvailable")
                        .HasColumnType("int");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<bool>("IsValidated")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("SubscriptionPlan")
                        .HasColumnType("bit");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("identite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UID");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("ProSs");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Proche", b =>
                {
                    b.Property<string>("IdProche")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("PatientUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdProche");

                    b.HasIndex("AdminUID");

                    b.HasIndex("PatientUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("Proches");
                });

            modelBuilder.Entity("LibrarySSMS.Models.SVEmbulance", b =>
                {
                    b.Property<Guid>("IdEmbulance")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdAdminH")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdCentre")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Matricule")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<bool>("isAmbulanceAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("isAmbulancePanne")
                        .HasColumnType("bit");

                    b.Property<bool>("isAmbulanceReady")
                        .HasColumnType("bit");

                    b.HasKey("IdEmbulance");

                    b.HasIndex("AdminUID");

                    b.HasIndex("IdAdminH");

                    b.HasIndex("IdCentre");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("SVEmbulances");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Smartphone", b =>
                {
                    b.Property<Guid>("Idphone")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ADRMAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<float>("battry")
                        .HasColumnType("real");

                    b.Property<Guid>("idporteur")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Idphone");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("Smartphones");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Smartwatch", b =>
                {
                    b.Property<Guid>("IdSmartwatch")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ADRMAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("FC_capte")
                        .HasColumnType("int");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PAD_capte")
                        .HasColumnType("int");

                    b.Property<int?>("PAS_capte")
                        .HasColumnType("int");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("TGS_capte")
                        .HasColumnType("real");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("idporteur")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdSmartwatch");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("Smartwatches");
                });

            modelBuilder.Entity("LibrarySSMS.Models.SmartwatchNewGen", b =>
                {
                    b.Property<Guid>("IdSmartwatchNewGen")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ADRMAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("Body_Temperature")
                        .HasColumnType("float");

                    b.Property<double?>("Derived_BMI")
                        .HasColumnType("float");

                    b.Property<double?>("Derived_HRV")
                        .HasColumnType("float");

                    b.Property<double?>("Derived_MAP")
                        .HasColumnType("float");

                    b.Property<int?>("Derived_Pulse_Pressure")
                        .HasColumnType("int");

                    b.Property<int?>("Diastolic_Blood_Pressure")
                        .HasColumnType("int");

                    b.Property<int?>("Heart_Rate")
                        .HasColumnType("int");

                    b.Property<bool>("IsConnected")
                        .HasColumnType("bit");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Oxygen_Saturation")
                        .HasColumnType("float");

                    b.Property<int?>("Respiratory_Rate")
                        .HasColumnType("int");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("Systolic_Blood_Pressure")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<Guid>("idporteur")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdSmartwatchNewGen");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("SmartwatchNewGens");
                });

            modelBuilder.Entity("LibrarySSMS.Models.SuperAdmin", b =>
                {
                    b.Property<Guid>("UID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("DBmanipulation")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnline")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastLogin")
                        .HasColumnType("datetime2");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UIDKEY")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("nbDeletedAdminacount")
                        .HasColumnType("int");

                    b.Property<int?>("nbSuspendedAdminacount")
                        .HasColumnType("int");

                    b.HasKey("UID");

                    b.ToTable("SuperAdmins");
                });

            modelBuilder.Entity("LibrarySSMS.Models.VehiculeOBU", b =>
                {
                    b.Property<Guid>("IdVehiculeOBU")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ADRMAC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("AdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Marque")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Modele")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("SuperAdminUID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("Timestamp")
                        .HasColumnType("datetimeoffset");

                    b.Property<float>("battry")
                        .HasColumnType("real");

                    b.Property<Guid>("idporteur")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("isRouteur")
                        .HasColumnType("bit");

                    b.Property<int>("typecar")
                        .HasColumnType("int");

                    b.HasKey("IdVehiculeOBU");

                    b.HasIndex("AdminUID");

                    b.HasIndex("SuperAdminUID");

                    b.ToTable("VehiculeOBUs");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Admin", b =>
                {
                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("Admins")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.AdminH", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("AdminHs")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("AdminHs")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.CGM", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("CGMs")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("CGMs")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Centre", b =>
                {
                    b.HasOne("LibrarySSMS.Models.AdminH", "AdminH")
                        .WithMany()
                        .HasForeignKey("AdminHUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("Centres")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("Centres")
                        .HasForeignKey("SuperAdminUID");

                    b.Navigation("AdminH");
                });

            modelBuilder.Entity("LibrarySSMS.Models.MedRec", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("MedRecs")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.Patient", "Patient")
                        .WithMany("MedRecs")
                        .HasForeignKey("PatientUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("MedRecs")
                        .HasForeignKey("SuperAdminUID");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Patient", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("Patients")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("Patients")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.ProS", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("Prosss")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("Prosss")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Proche", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("Proches")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.Patient", "Patient")
                        .WithMany("Proches")
                        .HasForeignKey("PatientUID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("Proches")
                        .HasForeignKey("SuperAdminUID");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("LibrarySSMS.Models.SVEmbulance", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("Embulances")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.AdminH", "AdminH")
                        .WithMany("SVEmbulances")
                        .HasForeignKey("IdAdminH");

                    b.HasOne("LibrarySSMS.Models.Centre", "Centre")
                        .WithMany("SVEmbulances")
                        .HasForeignKey("IdCentre");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("Embulances")
                        .HasForeignKey("SuperAdminUID");

                    b.Navigation("AdminH");

                    b.Navigation("Centre");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Smartphone", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("Phones")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("Phones")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Smartwatch", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("SmartWatches")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("SmartWatches")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.SmartwatchNewGen", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("SmartWatchesNewGen")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("SmartWatchesNewGen")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.VehiculeOBU", b =>
                {
                    b.HasOne("LibrarySSMS.Models.Admin", null)
                        .WithMany("VehiculeOBUss")
                        .HasForeignKey("AdminUID");

                    b.HasOne("LibrarySSMS.Models.SuperAdmin", null)
                        .WithMany("VehiculeOBUss")
                        .HasForeignKey("SuperAdminUID");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Admin", b =>
                {
                    b.Navigation("AdminHs");

                    b.Navigation("CGMs");

                    b.Navigation("Centres");

                    b.Navigation("Embulances");

                    b.Navigation("MedRecs");

                    b.Navigation("Patients");

                    b.Navigation("Phones");

                    b.Navigation("Proches");

                    b.Navigation("Prosss");

                    b.Navigation("SmartWatches");

                    b.Navigation("SmartWatchesNewGen");

                    b.Navigation("VehiculeOBUss");
                });

            modelBuilder.Entity("LibrarySSMS.Models.AdminH", b =>
                {
                    b.Navigation("SVEmbulances");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Centre", b =>
                {
                    b.Navigation("SVEmbulances");
                });

            modelBuilder.Entity("LibrarySSMS.Models.Patient", b =>
                {
                    b.Navigation("MedRecs");

                    b.Navigation("Proches");
                });

            modelBuilder.Entity("LibrarySSMS.Models.SuperAdmin", b =>
                {
                    b.Navigation("AdminHs");

                    b.Navigation("Admins");

                    b.Navigation("CGMs");

                    b.Navigation("Centres");

                    b.Navigation("Embulances");

                    b.Navigation("MedRecs");

                    b.Navigation("Patients");

                    b.Navigation("Phones");

                    b.Navigation("Proches");

                    b.Navigation("Prosss");

                    b.Navigation("SmartWatches");

                    b.Navigation("SmartWatchesNewGen");

                    b.Navigation("VehiculeOBUss");
                });
#pragma warning restore 612, 618
        }
    }
}
